{"version":3,"sources":["components/AuthCheck.tsx","components/Login.tsx","components/MarkAttendance.tsx","components/data/Subjects.ts","components/Landing.tsx","components/data/Fetch.tsx","components/data/Refresh.tsx","components/data/Open.ts","App.tsx","reportWebVitals.ts","firebase.config.ts","index.tsx"],"names":["ShowIfAuth","props","User","children","firebase","auth","currentUser","Token","a","getIdToken","ShowIfNoAuth","signOut","uiConfig","signInFlow","signInSuccessUrl","process","signInOptions","GoogleAuthProvider","PROVIDER_ID","Login","className","style","textAlign","paddingTop","src","alt","padding","color","fontSize","Typography","variant","display","height","width","firebaseAuth","MarkAttendance","open","onClose","sendRequest","onSubmit","subjects","useState","setSubjects","useEffect","console","error","PerformAsync","Subjects","subjectSelected","setSubject","attendanceType","setStatus","Date","date","setDate","startTime","setStartTime","endTime","setEndTime","Dialog","scroll","aria-labelledby","DialogTitle","CssBaseline","AppBar","backgroundColor","maxHeight","position","Toolbar","IconButton","edge","onClick","aria-label","DialogContent","id","event","result","subject","toLocaleDateString","start","toLocaleTimeString","substr","end","preventDefault","DialogContentText","Autocomplete","freeSolo","aria-required","options","autoHighlight","value","onInputChange","_","trim","renderInput","params","TextField","label","required","inputProps","select","onChange","target","helperText","MenuItem","selected","utils","DateFnsUtils","DatePicker","clearable","TimePicker","minutesStep","DialogActions","type","form","Landing","React","attendance","setAttendance","isLoading","setIsLoading","setError","useCallback","url","method","body","headers","fetch","Authorization","mode","redirect","response","ok","Error","status","statusText","responseData","json","message","clearError","useFetch","refresh","setRefresh","refreshNow","useRefresh","defaultV","isOpen","setOpen","close","Open","OpenDialogAtt","closeDialogAtt","counter","log","AttendanceTypeMap","records","Total","map","uuid","moment","toDate","JSON","stringify","title","data","columns","field","defaultGroupOrder","groupTitle","render","format","actions","icon","DeleteForever","tooltip","Array","isArray","Add","__","Refresh","grouping","addRowPosition","rowStyle","paging","actionsColumnIndex","App","alignItems","right","SignOut","then","window","location","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getCurrentUser","Promise","resolve","reject","unsubscribe","onAuthStateChanged","user","initializeApp","FirebaseSetup","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.392ca0ba.chunk.js","sourcesContent":["import React from 'react';\n\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\n\nexport function ShowIfAuth(props: { children: any }) {\n   if (User() != null) return <>{props.children}</>;\n   return <></>;\n}\nexport function User() {\n   return firebase.auth().currentUser;\n}\nexport async function Token() {\n   return await User()?.getIdToken();\n}\nexport function ShowIfNoAuth(props: { children: any }) {\n   if (User() == null) return <>{props.children}</>;\n   return <></>;\n}\nexport async function SignOut() {\n   return firebase.auth().signOut();\n}\n","import React from 'react';\n\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\n\n// eslint-disable-next-line\nimport * as firebaseui from 'firebaseui';\nimport { Typography } from '@material-ui/core';\n\n// Configure FirebaseUI.\nconst uiConfig = {\n   signInFlow: 'redirect',\n   // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\n   signInSuccessUrl: `${process.env.PUBLIC_URL}/`,\n   // We will display Google and Facebook as auth providers.\n   signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID] //,\n   // tosUrl: '<your-tos-url>',\n   // Privacy policy url/callback.\n   // privacyPolicyUrl: ''\n};\n\nexport default function Login() {\n   return (\n      <div\n         className=\"center\"\n         style={{ textAlign: 'center', paddingTop: '100px' }}\n      >\n         <img src={`${process.env.PUBLIC_URL}/logo192.png`} alt=\"Logo\" />\n         <div\n            className=\"center\"\n            style={{\n               textAlign: 'center',\n               padding: '30px',\n               color: '#808080',\n               fontSize: '20px'\n            }}\n         >\n            <Typography variant=\"h1\">Bunkstur</Typography>\n            <Typography variant=\"subtitle1\">Count the Number of lectures attended</Typography>\n         </div>\n         <div style={{ display: 'inline-block', height: '50%', width: '70%' }}>\n            <StyledFirebaseAuth\n               uiConfig={uiConfig}\n               firebaseAuth={firebase.auth()}\n            />\n         </div>\n      </div>\n   );\n}\n","import React, { useState } from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport CloseIcon from '@material-ui/icons/CloseRounded';\nimport MarkIcon from '@material-ui/icons/CheckCircle';\nimport SubjectIcon from '@material-ui/icons/AssignmentIndRounded';\n\nimport Subjects from './data/Subjects';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n   DatePicker,\n   TimePicker,\n   MuiPickersUtilsProvider\n} from '@material-ui/pickers';\n\nexport default function MarkAttendance({\n   open,\n   onClose,\n   sendRequest,\n   onSubmit\n}: {\n   open: boolean;\n   sendRequest: (url: string) => any;\n   onClose: () => void;\n   onSubmit: (result: {\n      subject: string;\n      date: string;\n      start: string;\n      end: string;\n      attendanceType: string;\n   }) => Promise<void>;\n}) {\n   const subjects = Subjects(sendRequest);\n\n   const [subjectSelected, setSubject] = useState('aa');\n   const [attendanceType, setStatus] = useState('P');\n   const [date, setDate] = useState(new Date());\n   const [startTime, setStartTime] = useState(new Date());\n   const [endTime, setEndTime] = useState(new Date());\n\n   return (\n      <Dialog\n         open={open}\n         scroll=\"body\"\n         aria-labelledby=\"form-dialog-title\"\n      >\n         <DialogTitle>Mark attendance</DialogTitle>\n         <CssBaseline />\n         <AppBar\n            style={{ backgroundColor: '#3f51b5', maxHeight: '8vh' }}\n            position=\"static\"\n         >\n            <Toolbar>\n               <IconButton\n                  edge=\"start\"\n                  color=\"inherit\"\n                  onClick={onClose}\n                  aria-label=\"close\"\n               >\n                  <CloseIcon />\n               </IconButton>\n            </Toolbar>\n         </AppBar>\n         <DialogContent>\n            <form\n               id=\"attendance-form\"\n               onSubmit={async event => {\n                  const result = {\n                     subject: subjectSelected,\n                     attendanceType,\n                     date: date.toLocaleDateString('en-CA'), // yyyy-mm-dd // Hack. JS needs better ways to format\n                     start: startTime\n                        .toLocaleTimeString('en-GB') // hh:mm:ss\n                        .substr(0, 5), // hh:mm\n                     end: endTime\n                        .toLocaleTimeString('en-GB') // hh:mm:ss\n                        .substr(0, 5) // hh:mm\n                  };\n                  event.preventDefault();\n                  await onSubmit(result);\n                  onClose();\n                  return false;\n               }}\n            >\n               <DialogContentText>Subject</DialogContentText>\n               <Autocomplete\n                  freeSolo\n                  aria-required={'true'}\n                  options={subjects}\n                  autoHighlight\n                  value={subjectSelected}\n                  onInputChange={(_, value) => {\n                     setSubject((value || '').trim());\n                  }}\n                  renderInput={(params: any) => (\n                     <TextField\n                        {...params}\n                        label=\"Select subject\"\n                        variant=\"outlined\"\n                        required\n                        inputProps={{\n                           ...params.inputProps\n                        }}\n                     />\n                  )}\n               />\n               <DialogContentText>Type</DialogContentText>\n               <TextField\n                  select\n                  id=\"attType\"\n                  label=\"Attendance type\"\n                  required\n                  aria-required={'true'}\n                  value={attendanceType}\n                  variant=\"outlined\"\n                  onChange={({ target: { value } }) => setStatus(value)}\n                  helperText=\"Select attendance type\"\n               >\n                  <MenuItem key=\"A\" value=\"A\">\n                     {'Absent'}\n                  </MenuItem>\n                  <MenuItem key=\"P\" value=\"P\" selected>\n                     {'Present'}\n                  </MenuItem>\n                  <MenuItem key=\"N\" value=\"N\">\n                     {'No lecture'}\n                  </MenuItem>\n               </TextField>\n\n               <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <DialogContentText>Date</DialogContentText>\n                  <DatePicker\n                     id=\"date\"\n                     label=\"Date\"\n                     value={date}\n                     clearable\n                     required\n                     onChange={setDate}\n                     helperText=\"Choose date\"\n                  />\n\n                  <DialogContentText>Start time</DialogContentText>\n                  <TimePicker\n                     id=\"start\"\n                     label=\"Start time\"\n                     value={startTime}\n                     required\n                     clearable\n                     minutesStep={5}\n                     onChange={start => {\n                        if (start == null) {\n                           setStartTime(start);\n                           return;\n                        }\n                        if (endTime != null && start >= endTime) {\n                           start = null;\n                        }\n                        setStartTime(start);\n                     }}\n                     helperText=\"Choose start time\"\n                  />\n\n                  <DialogContentText>End time</DialogContentText>\n                  <TimePicker\n                     id=\"end\"\n                     label=\"End time\"\n                     value={endTime}\n                     required\n                     clearable\n                     minutesStep={5}\n                     onChange={end => {\n                        if (end == null) {\n                           setEndTime(end);\n                           return;\n                        }\n                        if (startTime != null && end <= startTime) {\n                           end = null;\n                        }\n                        setEndTime(end);\n                     }}\n                     helperText=\"Choose end time\"\n                  />\n               </MuiPickersUtilsProvider>\n            </form>\n         </DialogContent>\n         <DialogActions>\n            <IconButton\n               type=\"submit\"\n               form=\"attendance-form\"\n               //    onClick={() => {\n               //       console.log(\n               //          'hu',\n               //          subjectSelected,\n               //          date,\n               //          attendanceType,\n               //          startTime,\n               //          endTime\n               //       );\n               //       if (\n               //          subjectSelected === '' ||\n               //          date == null ||\n               //          attendanceType === '' ||\n               //          startTime == null ||\n               //          endTime == null\n               //       )\n               //          return;\n               //       console.log(\n               //          'hue',\n               //          subjectSelected,\n               //          date,\n               //          attendanceType,\n               //          startTime,\n               //          endTime\n               //       );\n               //    }}\n            >\n               <MarkIcon color=\"primary\" />\n               Mark\n            </IconButton>\n         </DialogActions>\n      </Dialog>\n   );\n}\n","import { useEffect, useState } from \"react\";\n\nexport default function Subjects(sendRequest: (url: string)=>any){\n   const [subjects, setSubjects] = useState<string[]>([]);\n   useEffect(() => {\n    async function PerformAsync() {\n       try {\n          const subjects = await sendRequest(`subjects`);\n          setSubjects(subjects);\n       } catch (err) {\n          console.error(err);\n       }\n    }\n    PerformAsync();\n }, []);\n   return subjects;\n}\n","import React from 'react';\nimport { Token } from './AuthCheck';\nimport MaterialTable from 'material-table';\n\nimport MarkAttendance from './MarkAttendance';\n\nimport useFetch from './data/Fetch';\nimport useRefresh from './data/Refresh';\nimport Open from './data/Open';\n\nimport DeleteForever from '@material-ui/icons/DeleteForever';\nimport Add from '@material-ui/icons/AddRounded';\nimport Refresh from '@material-ui/icons/RefreshRounded';\n\nimport moment from 'moment';\n\nexport default function Landing() {\n   const [attendance, setAttendance] = React.useState<\n      Array<{\n         subject: string;\n         date: Date;\n         start: string;\n         end: string;\n         uuid: string;\n         attendanceType: string;\n      }>\n   >([]);\n   const { sendRequest } = useFetch();\n   const { refresh, refreshNow } = useRefresh();\n   const { isOpen, open: OpenDialogAtt, close: closeDialogAtt } = Open();\n   const counter: {\n      [key: string]: { [key: string]: number };\n   } = {};\n   React.useEffect(() => {\n      async function PerformAsync() {\n         console.log(await Token());\n         try {\n            const AttendanceTypeMap: any = {};\n            AttendanceTypeMap['A'] = 'Absent';\n            AttendanceTypeMap['P'] = 'Present';\n            AttendanceTypeMap['N'] = 'No lecture';\n\n            let records = await sendRequest(`attendance`);\n            console.log(records);\n\n            for (const { subject, attendanceType } of records) {\n               if (counter[subject] == null) counter[subject] = {};\n               // Count Present/Absent records\n               counter[subject][attendanceType] =\n                  (counter[subject][attendanceType] || 0) + 1;\n               // Count Subject Total attendance\n               counter[subject].Total = (counter[subject].Total || 0) + 1;\n            }\n            console.log(counter);\n            records = records.map(\n               ({\n                  subject,\n                  date,\n                  start,\n                  end,\n                  uuid,\n                  attendanceType\n               }: {\n                  subject: string;\n                  date: Date;\n                  start: string;\n                  end: string;\n                  uuid: string;\n                  attendanceType: string;\n               }) => ({\n                  subject,\n                  date: new Date(date),\n                  start: moment(start, 'hh:mm').toDate(),\n                  end: moment(end, 'hh:mm').toDate(),\n                  uuid,\n                  attendanceType: `${AttendanceTypeMap[attendanceType]} ${\n                     // Calculate Attendance Percentage\n                     (counter[subject][attendanceType] /\n                        counter[subject].Total) *\n                     100\n                  }`\n               })\n            );\n            setAttendance(records);\n         } catch (err) {\n            console.error(err);\n         }\n      }\n      PerformAsync();\n   }, [refresh]);\n   return (\n      <>\n         <MarkAttendance\n            open={isOpen}\n            onClose={closeDialogAtt}\n            sendRequest={sendRequest}\n            onSubmit={async result => {\n               console.log(JSON.stringify(result));\n               await sendRequest('attendance', 'POST', JSON.stringify(result), {\n                  'Content-Type': 'Application/json'\n               });\n               refreshNow();\n            }}\n         />\n            <MaterialTable\n               title=\"Attendance Records\"\n               data={attendance}\n               columns={[\n                  {\n                     title: 'Subject',\n                     field: 'subject',\n                     type: 'string',\n                     defaultGroupOrder: 0,\n                     groupTitle: 'Subjects'\n                  },\n                  {\n                     title: 'Attendance',\n                     field: 'attendanceType',\n                     defaultGroupOrder: 1,\n                     render: attendance => attendance\n                  },\n                  {\n                     title: 'Date',\n                     field: 'date',\n                     type: 'date',\n                     render: date => moment(date.date || date).format('LL')\n                  },\n                  {\n                     title: 'Start',\n                     field: 'start',\n                     type: 'time',\n                     render: start => moment(start.start).format('LT')\n                  },\n                  {\n                     title: 'End',\n                     field: 'end',\n                     type: 'time',\n                     render: end => moment(end.end).format('LT')\n                  }\n               ]}\n               actions={[\n                  {\n                     icon: DeleteForever,\n                     tooltip: 'Delete attendance record',\n                     onClick: async (_, data) => {\n                        const { uuid } = Array.isArray(data) ? data[0] : data;\n                        await sendRequest(`attendance/${uuid}`, 'DELETE');\n                        refreshNow();\n                     },\n                     position: 'row'\n                  },\n                  {\n                     icon: Add,\n                     position: 'toolbar',\n\n                     tooltip: 'Add attendance record',\n                     onClick: (_, __) => {\n                        OpenDialogAtt();\n                     }\n                  },\n                  {\n                     icon: Refresh,\n                     position: 'toolbar',\n                     tooltip: 'Refresh',\n                     onClick: (_, __) => refreshNow()\n                  }\n               ]}\n               options={{\n                  grouping: true,\n                  addRowPosition: 'first',\n                  rowStyle: {\n                     backgroundColor: '#EEE'\n                  },\n                  paging: false,\n                  // Set actions to last index\n                  actionsColumnIndex: -1\n               }}\n            />\n      </>\n   );\n}\n","import { useState, useCallback } from 'react';\nimport { Token } from '../AuthCheck';\n\nexport default function useHttpClient() {\n   const [isLoading, setIsLoading] = useState(false);\n   const [error, setError] = useState<string | null>(null);\n\n   const sendRequest = useCallback(\n      async (url: string, method = 'GET', body = null, headers = {}) => {\n         setIsLoading(true);\n\n         try {\n            const response = await fetch(\n               `${process.env.REACT_APP_SERVER}/api/v1/${url}`,\n               {\n                  method,\n                  body,\n                  mode: 'cors',\n                  headers: {\n                     ...headers,\n                     Authorization: `Bearer ${await Token()}`\n                  },\n                  redirect: 'follow'\n               }\n            );\n            if (!response.ok) {\n               throw new Error(\n                  response.status + ' : ' + response.statusText + ' : '\n               );\n            }\n\n            let responseData = null;\n            try {\n               responseData = await response.json();\n            } catch (err) {}\n            setIsLoading(false);\n            return responseData;\n         } catch (err) {\n            setError(err.message);\n            setIsLoading(false);\n            throw err;\n         }\n      },\n      []\n   );\n\n   const clearError = () => {\n      setError(null);\n   };\n\n   return { isLoading, error, sendRequest, clearError };\n}\n","import { useState } from 'react';\n\nexport default function useRefresh() {\n   const [refresh, setRefresh] = useState(true);\n   const refreshNow = () => {\n      setRefresh(!refresh);\n   };\n   return {refresh, refreshNow};\n}\n","import { useState } from 'react';\n\nexport default function Open(defaultV = false) {\n   const [isOpen, setOpen] = useState(defaultV);\n   const open = () => {\n      setOpen(true);\n   };\n   const close = () => {\n      setOpen(false);\n   };\n   return { isOpen, open, close };\n}\n","import React from 'react';\nimport './App.css';\nimport { ShowIfAuth, ShowIfNoAuth, SignOut } from './components/AuthCheck';\nimport Login from './components/Login';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Landing from './components/Landing';\nimport IconButton from '@material-ui/core/IconButton';\nimport LogoutIcon from '@material-ui/icons/PowerSettingsNewRounded';\n\nfunction App() {\n   return (\n      <>\n         <ShowIfAuth>\n            <div>\n               <AppBar position=\"static\">\n                  <Toolbar>\n                     <div style={{ textAlign: 'center' }}>\n                        <Typography variant=\"h3\" color=\"inherit\">\n                           Bunkstur\n                           <Typography variant=\"h6\" color=\"inherit\">\n                              Attendance Calculator\n                           </Typography>\n                        </Typography>\n                     </div>\n                     <IconButton\n                        style={{\n                           alignItems: 'end',\n                           position: 'absolute',\n                           right: '2vw',\n                           height: '100%'\n                        }}\n                        onClick={() => {\n                           SignOut().then(() => {\n                              window.location.href = `${process.env.PUBLIC_URL}/`;\n                           });\n                        }}\n                     >\n                        <div>\n                           <LogoutIcon />\n                           <br />\n                           LOGOUT\n                        </div>\n                     </IconButton>\n                  </Toolbar>\n               </AppBar>\n               <Landing />\n            </div>\n         </ShowIfAuth>\n         <ShowIfNoAuth>\n            <Login />\n         </ShowIfNoAuth>\n      </>\n   );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const firebaseConfig = {\n   apiKey: 'AIzaSyBuAD8yempb8JnNnl5-GyMfZh0ms5bgg3o',\n   authDomain: 'bunkstur.firebaseapp.com',\n   projectId: 'bunkstur',\n   storageBucket: 'bunkstur.appspot.com',\n   messagingSenderId: '757435315429',\n   appId: '1:757435315429:web:1e1a63a02566a1f256d00c',\n   measurementId: 'G-JCQ753ZH2C'\n};\n\nexport default firebaseConfig;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport firebase from \"firebase/app\";\nimport 'firebase/auth';\nimport firebaseConfig from './firebase.config';\n\nasync function FirebaseSetup() {\n   // eslint-disable-next-line\n   // await CreateAppointments();\n   // Wait till Firebase Load Complete before Firing\n   function getCurrentUser(auth: firebase.auth.Auth) {\n      return new Promise<firebase.User | null>((resolve, reject) => {\n         const unsubscribe = auth.onAuthStateChanged(user => {\n            unsubscribe();\n            resolve(user);\n         }, reject);\n      });\n   }\n   // If you want your app to work offline and load faster, you can change\n   // unregister() to register() below. Note this comes with some pitfalls.\n   // Learn more about service workers: https://bit.ly/CRA-PWA\n  //  serviceWorker.register();\n\n   firebase.initializeApp(firebaseConfig);\n   await getCurrentUser(firebase.auth());\n}\n\nFirebaseSetup().then(async () => {\n   ReactDOM.render(\n      <React.StrictMode>\n         <App />\n      </React.StrictMode>,\n      document.getElementById('root')\n   );\n});\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}